<Window x:Class="FlyleafPlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FlyleafPlayer"

        xmlns:fl="clr-namespace:FlyleafLib.Controls.WPF;assembly=FlyleafLib"
        xmlns:flwpf="clr-namespace:FlyleafLib.Controls.WPF;assembly=FlyleafLib.Controls.WPF"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        FontFamily="{materialDesign:MaterialDesignFont}"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        TextElement.Foreground="{DynamicResource MaterialDesign.Brush.Foreground}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        
        Title="Flyleaf" WindowStyle="None" ResizeMode="NoResize" AllowsTransparency="True" Background="Transparent"

        MinWidth="150" MinHeight="80"
        Height="450" Width="800" WindowStartupLocation="CenterScreen" Loaded="Window_Loaded" Icon="/Flyleaf.ico">

    <Window.Resources>
        <d:ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/MaterialDesignColors.xaml"/>
    </Window.Resources>

    <Border BorderThickness="0.6">
        <Border.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/MaterialDesign.xaml"/>
                    <ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/Converters.xaml"/>
                    <ResourceDictionary Source="Dictionary.xaml"/>
                </ResourceDictionary.MergedDictionaries>

                <Storyboard x:Key="fadeIn" Timeline.DesiredFrameRate="10">
                    <DoubleAnimation BeginTime="0:0:0" Storyboard.TargetProperty="Opacity"  To="1" Duration="0:0:0.5" AutoReverse="False"/>
                </Storyboard>

                <Storyboard x:Key="fadeOut" Timeline.DesiredFrameRate="10">
                    <DoubleAnimation BeginTime="0:0:0" Storyboard.TargetProperty="Opacity"  To="0" Duration="0:0:2.0" AutoReverse="False"/>
                </Storyboard>
            </ResourceDictionary>
        </Border.Resources>
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="#01000000"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary}"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding Player.Host.Surface.IsMouseOver}" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Player.Host.IsFullScreen}" Value="True">
                        <Setter Property="BorderBrush" Value="#01000000"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Active">
                        <Setter Property="BorderBrush" Value="#01000000"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Idle">
                        <Setter Property="BorderBrush" Value="#01000000"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Player.Host.IsResizing}" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Border BorderThickness="6 2 6 2" BorderBrush="#01000000">
            <Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--Title Bar-->
                    <Grid Grid.Row="0" x:Name="HeaderGrid" Margin="-2 0 -2 0">
                        <Grid.Background>
                            <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.15"/>
                        </Grid.Background>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Idle">
                                        <DataTrigger.EnterActions>
                                            <RemoveStoryboard BeginStoryboardName="fadeInN" />
                                            <BeginStoryboard x:Name="fadeOutN" Storyboard="{StaticResource fadeOut}" />
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Active">
                                        <DataTrigger.EnterActions>
                                            <RemoveStoryboard BeginStoryboardName="fadeInN" />
                                            <BeginStoryboard x:Name="fadeOutN2" Storyboard="{StaticResource fadeOut}" />
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Player.Activity.Mode, FallbackValue=FullActive, TargetNullValue=FullActive}" Value="FullActive">
                                        <DataTrigger.EnterActions>
                                            <RemoveStoryboard BeginStoryboardName="fadeOutN" />
                                            <RemoveStoryboard BeginStoryboardName="fadeOutN2" />
                                            <BeginStoryboard x:Name="fadeInN" Storyboard="{StaticResource fadeIn}" />
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <StackPanel Orientation="Horizontal">
                            <Image Source="Flyleaf.ico" Stretch="UniformToFill" Height="40" Margin="5 0 0 0" VerticalAlignment="Center" ToolTip="{Binding Tag.FlyleafLibVer}"/>
                        </StackPanel>
                        <TextBlock Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Flyleaf" FontStyle="Italic" FontSize="30" Foreground="{DynamicResource MaterialDesign.Brush.Primary}"/>

                        <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                            <ToggleButton Style="{StaticResource MaterialDesignActionToggleButton}" Focusable="False" ToolTip="Always on Top" Background="Transparent" Foreground="{DynamicResource MaterialDesign.Brush.Primary}"
                                  Content="{materialDesign:PackIcon Kind=PinOutline}" materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=Pin}" IsChecked="{Binding DetachedTopMost}"/>
                            <Button Focusable="False" Content="{materialDesign:PackIcon Kind=SettingsOutline,Size=22}" Command="{Binding OpenSettingsCmd, ElementName=FLBar}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Tag.MediaViewer}" Value="Video">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Focusable="False" x:Name="BtnMinimize" Content="{materialDesign:PackIcon Kind=Minimize}" VerticalContentAlignment="Bottom" Style="{StaticResource MaterialDesignIconButton}" Click="BtnMinimize_Click"/>
                            <ToggleButton Style="{StaticResource MaterialDesignActionToggleButton}" Foreground="{DynamicResource MaterialDesign.Brush.Primary}" Background="Transparent" Focusable="False"
                                                          IsChecked="{Binding Player.Host.IsFullScreen}"
                                                          Content="{materialDesign:PackIcon Kind=Fullscreen, Size=28}"
                                                          materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=FullscreenExit, Size=28}"/>
                            <Button Focusable="False" x:Name="BtnClose" Click="BtnClose_Click" Content="{materialDesign:PackIcon Kind=Close,Size=30}" Style="{StaticResource MaterialDesignIconButton}" />
                        </StackPanel>

                    </Grid>

                    <!--Video View-->
                    <Grid Grid.Row="1" x:Name="PART_ContextMenuOwner" ContextMenu="{StaticResource PopUpMenu}">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" d:Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Tag.MediaViewer}" Value="Video">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <TextBlock VerticalAlignment="Top" HorizontalAlignment="Left" Padding="4" Margin="10 -40 0 0" d:Text="00:00:00.000 / 01:42:23.913" FontWeight="Bold" FontSize="14" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}">
                            <TextBlock.Background>
                                <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.15"/>
                            </TextBlock.Background>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Active" d:Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        <Run Text="{Binding Player.CurTime, Mode=OneWay, Converter={StaticResource TicksToTimeSpan}, StringFormat={}{0:hh\\:mm\\:ss\\.fff}}"/>
                        <Run Text="/"/>
                        <Run Text="{Binding Player.Duration, Mode=OneWay, Converter={StaticResource TicksToTimeSpan}, StringFormat={}{0:hh\\:mm\\:ss\\.fff}}"/>
                        </TextBlock>

                        <!--Messages-->
                        <TextBlock VerticalAlignment="Top" HorizontalAlignment="Right" Padding="4" Margin="0 10 10 0" FontWeight="Bold" d:Text="Volume 50%" FontSize="14" Text="{Binding Tag.Msg}" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}">
                            <TextBlock.Background>
                                <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.15"/>
                            </TextBlock.Background>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Idle" d:Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <Trigger Property="Text" Value="">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <!--Status-->
                        <TextBlock VerticalAlignment="Top" HorizontalAlignment="Right" Padding="4" Margin="0 -40 10 0" FontWeight="Bold" d:Text="Playing" FontSize="18" Text="{Binding Player.Status}" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}">
                            <TextBlock.Background>
                                <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.15"/>
                            </TextBlock.Background>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Active" d:Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <!--Pop Up Dialog (Settings/Set Values)-->
                        <materialDesign:DialogHost x:Name="PART_DialogSettings" OverlayBackground="{x:Null}"/>

                        <!--Subtitles-->
                        <flwpf:OutlinedTextBlock Stroke="{Binding Player.Config.Video.BackgroundColor, Converter={StaticResource ColorToBrush}}"
                         ClipToBounds="False"
                         Fill="{Binding UIConfig.SubsFontColor, Converter={StaticResource ColorToBrush}}"
                         StrokePosition="Outside"
                         StrokeThicknessInitial="{Binding UIConfig.SubsStrokeThickness}"
                         Margin="{Binding UIConfig.SubsMargin2}"
                         VerticalAlignment="Bottom"
                         HorizontalAlignment="Center"
                         TextAlignment="Center"
                         TextWrapping="Wrap"
                         FontFamily="{Binding UIConfig.SubsFontFamily}"
                         FontSizeInitial="{Binding UIConfig.SubsFontSize}"
                         FontWeight="{Binding UIConfig.SubsFontWeight}"
                         FontStyle="{Binding UIConfig.SubsFontStyle}"
                         Text="{Binding Player.Subtitles.SubsText}">
                        </flwpf:OutlinedTextBlock>

                        <!--Flyleaf Bar-->
                        <flwpf:FlyleafBar x:Name="FLBar" Player="{Binding Player}" Margin="-2 0 -2 0"/>
                    </Grid>

                    <!--Slide View-->
                    <materialDesign:DialogHost Grid.Row="0" Grid.RowSpan="2" DialogOpened="DialogHost_DialogOpened" DialogClosed="DialogHost_DialogClosed">
                        <Grid>
                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Setter Property="Visibility" Value="Collapsed" d:Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Tag.MediaViewer}" Value="Slide">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Idle">
                                                <DataTrigger.EnterActions>
                                                    <RemoveStoryboard BeginStoryboardName="fadeInM1" />
                                                    <BeginStoryboard x:Name="fadeOutM1" Storyboard="{StaticResource fadeOut}" />
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Active">
                                                <DataTrigger.EnterActions>
                                                    <RemoveStoryboard BeginStoryboardName="fadeInM1" />
                                                    <RemoveStoryboard BeginStoryboardName="fadeOutM1" />
                                                    <BeginStoryboard x:Name="fadeOutM2" Storyboard="{StaticResource fadeOut}" />
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Player.Activity.Mode, FallbackValue=FullActive, TargetNullValue=FullActive}" Value="FullActive">
                                                <DataTrigger.EnterActions>
                                                    <RemoveStoryboard BeginStoryboardName="fadeOutM1" />
                                                    <RemoveStoryboard BeginStoryboardName="fadeOutM2" />
                                                    <BeginStoryboard x:Name="fadeInM1" Storyboard="{StaticResource fadeIn}" />
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>

                                <!--SlideShow ToolBar (Play|Pause, Restart, Settings)-->
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 60 0 0">
                                    <StackPanel.Background>
                                        <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.35"/>
                                    </StackPanel.Background>
                                    <Button Command="{Binding Tag.SlideShowToggle}" IsEnabled="{Binding Tag.CanNextImage}" Focusable="False" Foreground="White">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Play,Size=34}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Tag.SlideShow}" Value="True">
                                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Pause,Size=34}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button Style="{StaticResource MaterialDesignIconButton}" Content="{materialDesign:PackIcon Kind=Restart,Size=34}" Command="{Binding Tag.SlideShowRestart}" IsEnabled="{Binding Tag.CanPrevImage}" Focusable="False" Foreground="White">
                                        <Button.Background>
                                            <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.35"/>
                                        </Button.Background>
                                    </Button>
                                    <Button Style="{StaticResource MaterialDesignIconButton}" Content="{materialDesign:PackIcon Kind=GearOutline,Size=34}" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" Focusable="False" Foreground="White">
                                        <Button.CommandParameter>
                                            <Border BorderThickness="2" BorderBrush="{DynamicResource MaterialDesign.Brush.Primary}">
                                                <StackPanel Margin="24 12">
                                                    <StackPanel Orientation="Horizontal" Margin="0 0 0 8">
                                                        <TextBlock Width="140" Text="Timer (ms): " VerticalAlignment="Center" Margin="0 0 4 0"/>
                                                        <TextBox Text="{Binding Tag.SlideShowConfig.SlideShowTimer}" TextAlignment="Left"/>
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal" Margin="0 0 0 8">
                                                        <TextBlock Width="140" Text="Page Step: " VerticalAlignment="Center" Margin="0 0 4 0"/>
                                                        <TextBox Text="{Binding Tag.SlideShowConfig.PageStep}" TextAlignment="Left"/>
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal" Margin="0 0 0 8">
                                                        <TextBlock Width="140" Text="Max Images: " VerticalAlignment="Center" Margin="0 0 4 0"/>
                                                        <TextBox Text="{Binding Tag.SlideShowConfig.MaxFiles}" TextAlignment="Left"/>
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal" Margin="0 0 0 16">
                                                        <TextBlock Width="140" Text="Delete Confirmation: " VerticalAlignment="Center" Margin="0 0 4 0"/>
                                                        <ToggleButton IsChecked="{Binding Tag.SlideShowConfig.DeleteConfirmation}"/>
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Button Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="0 0 10 0" CommandParameter="Save" Content="Save" IsCancel="True"/>
                                                        <Button Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="Apply" Content="Apply" IsCancel="True"/>
                                                    </StackPanel>
                                                </StackPanel>
                                            </Border>
                                        </Button.CommandParameter>
                                    </Button>
                                </StackPanel>

                                <!--Show Prev Arrow Button-->
                                <Button Style="{StaticResource MaterialDesignOutlinedButton}" Command="{Binding Tag.ShowPrevImage}" IsEnabled="{Binding Tag.CanPrevImage}" Focusable="False" Content="{materialDesign:PackIcon Kind=ArrowLeft,Size=30}"  Background="#AA000000" Padding="0" Margin="0" VerticalContentAlignment="Center" Width="40" Height="100" VerticalAlignment="Center" HorizontalAlignment="Left"/>

                                <!--Show Prev Next Button-->
                                <Button Style="{StaticResource MaterialDesignOutlinedButton}" Command="{Binding Tag.ShowNextImage}" IsEnabled="{Binding Tag.CanNextImage}" Focusable="False" Content="{materialDesign:PackIcon Kind=ArrowRight,Size=30}" Background="#AA000000" Padding="0" Margin="0" VerticalContentAlignment="Center" Width="40" Height="100" VerticalAlignment="Center" HorizontalAlignment="Right"/>


                            </Grid>
                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Setter Property="Visibility" Value="Collapsed" d:Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Tag.MediaViewer}" Value="Slide">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Tag.MediaViewer}" Value="Image">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Idle">
                                                <DataTrigger.EnterActions>
                                                    <RemoveStoryboard BeginStoryboardName="fadeInMA1" />
                                                    <RemoveStoryboard BeginStoryboardName="fadeInMA2" />
                                                    <BeginStoryboard x:Name="fadeOutMA1" Storyboard="{StaticResource fadeOut}" />
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Active">
                                                <DataTrigger.EnterActions>
                                                    <RemoveStoryboard BeginStoryboardName="fadeOutMA1" />
                                                    <BeginStoryboard x:Name="fadeInMA1" Storyboard="{StaticResource fadeIn}" />
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Player.Activity.Mode, FallbackValue=FullActive, TargetNullValue=FullActive}" Value="FullActive">
                                                <DataTrigger.EnterActions>
                                                    <RemoveStoryboard BeginStoryboardName="fadeOutMA1" />
                                                    <RemoveStoryboard BeginStoryboardName="fadeInMA2" />
                                                    <BeginStoryboard x:Name="fadeInMA2" Storyboard="{StaticResource fadeIn}" />
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>

                                <TextBlock VerticalAlignment="Top" HorizontalAlignment="Left" Padding="4" Margin="10 -40 0 0" Text="{Binding Tag.ImageTitle}" d:Text="Test.jpg" FontWeight="Bold" FontSize="14" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}">
                                    <TextBlock.Background>
                                        <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.15"/>
                                    </TextBlock.Background>
                                </TextBlock>
                                <TextBlock VerticalAlignment="Top" HorizontalAlignment="Left" Background="#AA000000"  Text="{Binding Tag.ImageTitle}" d:Text="Test.jpg" FontWeight="Bold" FontSize="14" Padding="4" Margin="44 14 0 0" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}"/>

                                <!--Index / Total-->
                                <TextBlock VerticalAlignment="Bottom" Background="#AA000000" HorizontalAlignment="Center" d:Text="526 / 1000" FontWeight="Bold" FontSize="14" Padding="4" Margin="0 0 0 20" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} / {1}">
                                            <Binding Path="Tag.UIImageIndex" />
                                            <Binding Path="Tag.TotalFiles" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                        </Grid>
                    </materialDesign:DialogHost>

                    <!-- (All Views) -->

                    <!--Debug Info-->
                    <fl:PlayerDebug Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" BoxColor="#AA000000" HeaderColor="White" InfoColor="{DynamicResource MaterialDesign.Brush.Primary.Light}" ValueColor="{DynamicResource MaterialDesign.Brush.Secondary.Light}" Visibility="{Binding ShowDebug, Converter={StaticResource BooleanToVisibility}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                        <fl:PlayerDebug.Style>
                            <Style TargetType="fl:PlayerDebug">
                                <Setter Property="Player" Value="{x:Null}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Visibility}" Value="Visible">
                                        <Setter Property="Player" Value="{Binding Player}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </fl:PlayerDebug.Style>
                    </fl:PlayerDebug>

                    <!--Error Message-->
                    <TextBox Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10" d:Text="Error Message" FontSize="16" IsReadOnly="True" BorderThickness="0" Text="{Binding Player.LastError}" Foreground="{DynamicResource MaterialDesign.Brush.Primary}" TextWrapping="Wrap">
                        <TextBox.Background>
                            <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.15"/>
                        </TextBox.Background>
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Player.LastError}" Value="{x:Null}" d:Value="notnull">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                </Grid>
            </Grid>
        </Border>
    </Border>
</Window>
